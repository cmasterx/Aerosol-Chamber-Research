#include <Arduino.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include <Wire.h>
#include <SPI.h>
#include <SD.h>

// screen includes
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#ifndef BAUDRATE
#define BAUDRATE 9600
#endif

/* Define values */
#define NUM_SENSORS        3
#define START_PIN          2
#define MUX_ADDR        0x70
#define SD_PIN             4
#define SAFE_BYPASS_PIN    8

#define MAX_FILE_COUNTER 1000

/* Screen vars */
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1

/* Recording */
enum RECORDING_INTERVAL {
  HALF_SEC      = 1,
  ONE_SEC       = 2,
  TWO_SEC       = 4,
  FIVE_SEC      = 10,
  TEN_SEC       = 20,
  FIFTEEN_SEC   = 30,
  THIRTY_SEC    = 60,
  SIXTY_SEC     = 120,
  ONETWENTY_SEC = 240
};

// 'Texas_A&M_University_logo', 128x64px
const unsigned char A_M_LOGO [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x3f, 0x1c, 0x00, 0x3f, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0x8c, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0xcc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0xec, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x3f, 0xc0, 0x03, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x3f, 0xf0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x3f, 0xf0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x3f, 0x18, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 0x3f, 0x18, 0x0f, 0xf8, 0x1f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x3f, 0x18, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0x18, 0x0f, 0xfc, 0x3f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x3e, 0xf8, 0x00, 0x3f, 0x18, 0x0f, 0xfe, 0x7f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x7c, 0x00, 0x3f, 0x18, 0x0f, 0xfe, 0x7d, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x7c, 0x7c, 0x00, 0x3f, 0x18, 0x0f, 0xbf, 0x7d, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfc, 0x7e, 0x00, 0x3f, 0x18, 0x0f, 0x9f, 0xfd, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xfc, 0x3e, 0x00, 0x3f, 0x18, 0x0f, 0x9f, 0xf9, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x3f, 0x18, 0x0f, 0x8f, 0xf9, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x00, 0x3f, 0x18, 0x0f, 0x8f, 0xf1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x3f, 0x18, 0x0f, 0x87, 0xf1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x3f, 0x18, 0x0f, 0x87, 0xe1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x3f, 0x18, 0x0f, 0x83, 0xe1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xe0, 0x0f, 0xc0, 0x3f, 0x18, 0x0f, 0x83, 0xc1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xc0, 0x07, 0xc0, 0x3f, 0x18, 0x0f, 0x83, 0xc1, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xc0, 0x07, 0xe0, 0x3f, 0x18, 0x0f, 0x81, 0x81, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xfc, 0x3f, 0x18, 0x3f, 0xe1, 0x87, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xfc, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xfc, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xfc, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x3f, 0xe0, 0x0f, 0xfc, 0x3f, 0x18, 0x3f, 0xe0, 0x07, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x1f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0x3e, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfe, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xfe, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// sreen instance
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT,&Wire, OLED_RESET);

// recording state
bool record = false;
unsigned long recordingInterval = RECORDING_INTERVAL::HALF_SEC;   // time in ms
bool takeMeasurement = false;

// LED
bool isLEDOn = false;
bool ledChangeState = false;

void changeState() {
  record = !record;
}

void toggleLED() {
  isLEDOn = !isLEDOn;
  digitalWrite(13, isLEDOn);
}

void setTimer1(unsigned int time) {
  cli();
  TCCR1A = 0;
  TCCR1B = 0;
  TCNT1  = 0;//initialize counter value to 0
  OCR1A = time; // = (16*10^6) / (1*1024) - 1 (must be <65536)
  TCCR1B |= (1 << WGM12);
  TCCR1B |= (1 << CS12) | (1 << CS10);  
  TIMSK1 |= (1 << OCIE1A);

  // enable interrupt
  sei();
}

void setup() {
  Serial.begin(BAUDRATE);
  Serial.println("Initializing...");
  // initializes i2c
  Wire.begin();

  // initialize
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("SSD1306 allocation failed");
    for (;;); // Don't proceed, loop forever
  }
  delay(2000);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 10);
  display.drawBitmap(0, 0, A_M_LOGO, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
  display.display();

  // initializes pins and interrupts
  pinMode(START_PIN, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(START_PIN), changeState, FALLING);
  pinMode(LED_BUILTIN, OUTPUT);
  setTimer1(7811);    // timer interrups every half seconds
  Serial.println("Initializing Done");
}


void loop() {
  // put your main code here, to run repeatedly:

  if (ledChangeState) {
    toggleLED();
    ledChangeState = !ledChangeState;
  }
}

unsigned long counter = 0;

ISR(TIMER1_COMPA_vect){//timer1 interrupt 1Hz toggles pin 13 (LED)
//generates pulse wave of frequency 1Hz/2 = 0.5kHz (takes two cycles for full wave- toggle high then toggle low)
  ++counter;
  counter %= 240;

  if ((counter % recordingInterval == 0)) {
    ledChangeState = true;
  }
}
